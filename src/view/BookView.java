/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.toedter.calendar.JDateChooser;
import dao.BookCategoryDao;
import dao.BookDao;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.SimpleDateFormat;
import java.time.Clock;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.beans.binding.ListBinding;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Book;
import model.Category;
import org.hibernate.Criteria;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.Transaction;
import rmi_service.IBook;
import rmi_service.IBookCategory;
import utility.HibernateUtil;

/**
 *
 * @author UMUHOZA Diane
 */
public class BookView extends javax.swing.JInternalFrame {
    Book b = new Book();
    BookDao bd = new BookDao();
    Category ct = new Category();
    BookCategoryDao ctd =new BookCategoryDao();
    
    
    public void  addCatNameToCombo(){
        
        List<String> catName = bd.getCategoryName();
        
       bcategory.removeAllItems();
        for(String cat:catName){
            bcategory.addItem(cat.toString());
        }
       
    }
    
    
       private void insertJtableBook(){
        List<Book> bk =bd.selectBook();
        String[] col={"Book Id","Title","Publishing House","Date of Publication","Author","Pages","Category Id"};
        DefaultTableModel tm =(DefaultTableModel) booktable.getModel();
        tm.setRowCount(0);
        tm.setColumnIdentifiers(col);
        for(Iterator iter = bk.iterator();iter.hasNext();){
            Book b =(Book) iter.next();
            Object [] book ={b.getBookId(),b.getTitle(),b.getPhouse(),b.getPdate(),b.getAuthor(),b.getPages(),b.getCategory_1()};
            tm.addRow(book);
        }
       }
       
       private void insertJtableCategory(){
        List<Category> cat =ctd.selectBookCategory();
        String[] col={"Category Id","Category Name"};
        DefaultTableModel tm =(DefaultTableModel) categorytable.getModel();
        tm.setRowCount(0);
        tm.setColumnIdentifiers(col);
        for(Iterator iter = cat.iterator();iter.hasNext();){
           Category ct =(Category) iter.next();
            Object [] category ={ct.getCategoryId(),ct.getCategoryName()};
            tm.addRow(category);
        }
       }
       
  
       
        
  

    /**
     * Creates new form BookView
     */
    public BookView() {
    
        initComponents();
          initializer();
         insertJtableBook();
         insertJtableCategory();
       //  insertJtableBook();
         addCatNameToCombo();
    }
    
    public void  initializer(){
      JDateChooser jd = new JDateChooser();
      jd.setDateFormatString("YYYY-MM-dd");
      
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bookid = new javax.swing.JTextField();
        title = new javax.swing.JTextField();
        date = new com.toedter.calendar.JDateChooser();
        house = new javax.swing.JTextField();
        author = new javax.swing.JTextField();
        page = new javax.swing.JSpinner();
        bcategory = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        Bsave = new javax.swing.JButton();
        Bupdate = new javax.swing.JButton();
        Bdelete = new javax.swing.JButton();
        Bclear = new javax.swing.JButton();
        Bexit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        booktable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        Tsave = new javax.swing.JButton();
        Tupdate = new javax.swing.JButton();
        Tdelete = new javax.swing.JButton();
        Tclear = new javax.swing.JButton();
        Texit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        categorytable = new javax.swing.JTable();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Information"));

        jLabel1.setText("Book Id:");

        jLabel2.setText("Title:");

        jLabel3.setText("Publishing House:");

        jLabel4.setText("Date of Publication:");

        jLabel5.setText("Author:");

        jLabel6.setText("Pages:");

        jLabel7.setText("Book Category:");

        bookid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookid)
                    .addComponent(title)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(house)
                    .addComponent(author)
                    .addComponent(page)
                    .addComponent(bcategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bookid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(house, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(page, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(bcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Bsave.setText("SAVE");
        Bsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsaveActionPerformed(evt);
            }
        });

        Bupdate.setText("UPDATE");
        Bupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BupdateActionPerformed(evt);
            }
        });

        Bdelete.setText("DELETE");
        Bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdeleteActionPerformed(evt);
            }
        });

        Bclear.setText("CLEAR");
        Bclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BclearActionPerformed(evt);
            }
        });

        Bexit.setText("EXIT");
        Bexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Bupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bdelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(Bsave)
                .addGap(18, 18, 18)
                .addComponent(Bupdate)
                .addGap(18, 18, 18)
                .addComponent(Bdelete)
                .addGap(18, 18, 18)
                .addComponent(Bclear)
                .addGap(18, 18, 18)
                .addComponent(Bexit)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        booktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Title", "Publishing House", "Date of Publication", "Author", "Pages", "Category Id"
            }
        ));
        jScrollPane1.setViewportView(booktable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(85, 85, 85))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Book", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Information"));

        jLabel8.setText("Category Id:");

        jLabel9.setText("Category Name:");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(id)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tsave.setText("SAVE");
        Tsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TsaveActionPerformed(evt);
            }
        });

        Tupdate.setText("UPDATE");
        Tupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TupdateActionPerformed(evt);
            }
        });

        Tdelete.setText("DELETE");
        Tdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TdeleteActionPerformed(evt);
            }
        });

        Tclear.setText("CLEAR");
        Tclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TclearActionPerformed(evt);
            }
        });

        Texit.setText("EXIT");
        Texit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Tupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Tsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Tdelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Tclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Texit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Tsave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tupdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tdelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tclear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Texit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        categorytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category Id", "Category Name"
            }
        ));
        jScrollPane2.setViewportView(categorytable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(117, 117, 117))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(102, 102, 102)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("BookCategory", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookidActionPerformed

    private void BsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsaveActionPerformed
       
       /* b.setBookId(bookid.getText());
        b.setTitle(title.getText());
        b.setPhouse(house.getText());
        b.setPdate(new Date(date.getDate().getTime()));
        b.setAuthor(author.getText());
        b.setPages(Integer.valueOf(page.getValue().toString()));
         String id=null;
        String name = bcategory.getSelectedItem().toString();
        Transaction tr =null;
        Session ses = HibernateUtil.getSessionFactory().openSession(); 
        tr =ses.beginTransaction();
        Criteria Bookcat = ses.createCriteria(Category.class);
        SQLQuery query = ses.createSQLQuery("select categoryId from Category where categoryName=?");
         query.setParameter(0, name);
          List temp = query.list();
           for (Object obj : temp) {
                id = obj.toString();
            }
        ses.close();
           b.setCategory_1(id);
           
        
        bd.saveBook(b);
        insertJtableBook();
        JOptionPane.showMessageDialog(this, "data saved!");*/
        
        
        
         try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2001);
            IBook bookservice = (IBook) registry.lookup("bookservice");
            
       
           String a=bookid.getText();
           String b=title.getText();
           String c=house.getText();
          Date d=(new Date(date.getDate().getTime()));
           String e =author.getText();
           int f=Integer.valueOf(page.getValue().toString());
            String id=null;
        String name = bcategory.getSelectedItem().toString();
        Transaction tr =null;
        Session ses = HibernateUtil.getSessionFactory().openSession(); 
        tr =ses.beginTransaction();
        Criteria Bookcat = ses.createCriteria(Category.class);
        SQLQuery query = ses.createSQLQuery("select categoryId from Category where categoryName=?");
         query.setParameter(0, name);
          List temp = query.list();
           for (Object obj : temp) {
                id = obj.toString();
            }
        ses.close();
        String g= id;
        boolean out = bookservice.save(a,b,c,d,e,f,g);
        
        insertJtableBook();
        JOptionPane.showMessageDialog(this, "Saved Successfully!!");  
        System.err.println(out ? "Saved Successfully!!" : "Error Ocurred. Can't Saved ");
        insertJtableBook();
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
      
        
    }//GEN-LAST:event_BsaveActionPerformed

    private void BexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BexitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_BexitActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void TsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TsaveActionPerformed
        // TODO add your handling code here:
       /* ct.setCategoryId(id.getText());
        ct.setCategoryName(name.getText());
        ctd.saveBookCategory(ct);
        insertJtableCategory();
        addCatNameToCombo();
          JOptionPane.showMessageDialog(this, "data saved!");*/
       
          try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2001);
            IBookCategory bookcategoryservice = (IBookCategory) registry.lookup("bookcategoryservice");
          String a= id.getText();
          String b=name.getText();
          boolean out = bookcategoryservice.save(a,b);
         insertJtableCategory();
          addCatNameToCombo();
           
             JOptionPane.showMessageDialog(this, "Saved Successfully!!");
            System.out.println(out ? "Saved Successfully!!" : "Error. cant't Saved!");
              insertJtableCategory();
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    
          
    }//GEN-LAST:event_TsaveActionPerformed

    private void TexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TexitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_TexitActionPerformed

    private void BupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BupdateActionPerformed
        // TODO add your handling code here:
        /*      b.setBookId(bookid.getText());
        b.setTitle(title.getText());
        b.setPhouse(house.getText());
        b.setPdate(new Date(date.getDate().getTime()));
        b.setAuthor(author.getText());
        b.setPages(Integer.valueOf(page.getValue().toString()));
         String id=null;
        String name = bcategory.getSelectedItem().toString();
        Transaction tr =null;
        Session ses = HibernateUtil.getSessionFactory().openSession(); 
        tr =ses.beginTransaction();
        Criteria Bookcat = ses.createCriteria(Category.class);
        SQLQuery query = ses.createSQLQuery("select categoryId from Category where categoryName=?");
         query.setParameter(0, name);
          List temp = query.list();
           for (Object obj : temp) {
                id = obj.toString();
            }
        ses.close();
           b.setCategory_1(id); 
           
        
        bd.saveBook(b);
        insertJtableBook();
        JOptionPane.showMessageDialog(this, "data updated!");*/
           try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2001);
            IBook bookservice = (IBook) registry.lookup("bookservice");
            
       
           String a=bookid.getText();
           String b=title.getText();
           String c=house.getText();
           SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
           String d = sdf.format(date.getDate());
           String e =author.getText();
           int f=Integer.valueOf(page.getValue().toString());
            String id=null;
        String name = bcategory.getSelectedItem().toString();
        Transaction tr =null;
        Session ses = HibernateUtil.getSessionFactory().openSession(); 
        tr =ses.beginTransaction();
        Criteria Bookcat = ses.createCriteria(Category.class);
        SQLQuery query = ses.createSQLQuery("select categoryId from Category where categoryName=?");
         query.setParameter(0, name);
          List temp = query.list();
           for (Object obj : temp) {
                id = obj.toString();
            }
        ses.close();
        String g= id;
        boolean out = bookservice.update(a,b,c,d,e,f,g);
        
        insertJtableBook();
        JOptionPane.showMessageDialog(this, "updated Successfully!!");
        System.err.println(out ? "updated Successfully!!" : "Error Ocurred. Can't Saved ");
        insertJtableBook();
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    
       
        
      
    }//GEN-LAST:event_BupdateActionPerformed

    private void BdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdeleteActionPerformed
        // TODO add your handling code here:
     /*  b.setBookId(bookid.getText());
        bd.deleteBook(b);
        insertJtableBook();
        JOptionPane.showMessageDialog(this, "data deleted!");*/
         try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2001);
            IBook bookservice = (IBook) registry.lookup("bookservice");
            
       
           String a=bookid.getText();
           
        boolean out = bookservice.delete(a);
        
        insertJtableBook();
        JOptionPane.showMessageDialog(this, "deleted Successfully!!");
          
            System.err.println(out ? "deleted Successfully!!" : "Error Ocurred. Can't Saved ");
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        
        
    }//GEN-LAST:event_BdeleteActionPerformed

    private void BclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BclearActionPerformed
        // TODO add your handling code here:
        
         bookid.setText("");
         title.setText("");
         house.setText("");
         date.setDate(null);
         author.setText("");
         page.setValue(0);
         bcategory.setSelectedItem(null);
                          
        
    }//GEN-LAST:event_BclearActionPerformed

    private void TupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TupdateActionPerformed
        // TODO add your handling code here:
       /*  ct.setCategoryId(id.getText());
        ct.setCategoryName(name.getText());
        ctd.updateBookCategory(ct);
        insertJtableCategory();
        addCatNameToCombo();
          JOptionPane.showMessageDialog(this, "data saved!");*/
         
           try {
         Registry registry = LocateRegistry.getRegistry("localhost", 2001);
         IBookCategory bookcategoryservice = (IBookCategory) registry.lookup("bookcategoryservice");
          String a= id.getText();
          String b=name.getText();
          boolean out = bookcategoryservice.update(a,b);
          insertJtableCategory();
          addCatNameToCombo();
        
           
          JOptionPane.showMessageDialog(this, "updated Successfully!!");
          System.out.println(out ? "updated Successfully!!" : "Error. cant't Saved!");
           insertJtableCategory();
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TupdateActionPerformed

    private void TdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TdeleteActionPerformed
        // TODO add your handling code here:
        /*  ct.setCategoryId(id.getText());
          ctd.deleteBookCategory(ct);
          insertJtableCategory();
          
       addCatNameToCombo();
          JOptionPane.showMessageDialog(this, "data deleted!");*/
          try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2001);
            IBookCategory bookcategoryservice = (IBookCategory) registry.lookup("bookcategoryservice");
          String a= id.getText();
          boolean out = bookcategoryservice.delete(a);
          insertJtableCategory();
          addCatNameToCombo();
           
             JOptionPane.showMessageDialog(this, "deleted Successfully!!");
            System.out.println(out ? "deleted Successfully!!" : "Error. cant't Saved!");
             insertJtableCategory();
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_TdeleteActionPerformed

    private void TclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TclearActionPerformed
        // TODO add your handling code here:
        id.setText("");
        name.setText("");
    }//GEN-LAST:event_TclearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bclear;
    private javax.swing.JButton Bdelete;
    private javax.swing.JButton Bexit;
    private javax.swing.JButton Bsave;
    private javax.swing.JButton Bupdate;
    private javax.swing.JButton Tclear;
    private javax.swing.JButton Tdelete;
    private javax.swing.JButton Texit;
    private javax.swing.JButton Tsave;
    private javax.swing.JButton Tupdate;
    private javax.swing.JTextField author;
    private javax.swing.JComboBox<String> bcategory;
    private javax.swing.JTextField bookid;
    private javax.swing.JTable booktable;
    private javax.swing.JTable categorytable;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField house;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField name;
    private javax.swing.JSpinner page;
    private javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables
}

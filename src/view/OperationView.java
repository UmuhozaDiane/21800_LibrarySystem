/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import dao.BookDao;
import dao.OperationDao;
import java.awt.Image;
import java.awt.print.PrinterException;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Book;
import model.Category;
//import javax.swing.text.Document;
import model.Operation;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.hibernate.Criteria;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;
import utility.HibernateUtil;

/**
 *
 * @author UMUHOZA Diane
 */
public class OperationView extends javax.swing.JInternalFrame {
    Operation op = new Operation();
    OperationDao opd = new OperationDao();
     
   
    public void  addBookCatToCombo(){
        BookDao bookdao = new BookDao();
        List<String> clie = bookdao.getCategoryName();
        bkcategory.removeAll();
        for(String cat:clie){
            bkcategory.addItem(cat.toString());
        }
    }
     private void insertt(){
        List<Operation> cl =opd.selectOperation();
        String[] col={"Client Name","Book Name","Author","Return Date","Status",};
        DefaultTableModel tm =(DefaultTableModel) optable.getModel();
        tm.setRowCount(0);
        tm.setColumnIdentifiers(col);
        for(Iterator iter = cl.iterator();iter.hasNext();){
            Operation op =(Operation) iter.next();
            Object [] operation ={op.getClientname(),op.getBookname(),op.getAuthor(),op.getReturndate(),op.getStatus()};
            tm.addRow(operation);
        }
    
     }

            
    
    
     


    /**
     * Creates new form OperationView
     */
    public OperationView() {
        initComponents();
        insertt();
        addBookCatToCombo();
        
       
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        photop = new javax.swing.JPanel();
        resultphoto = new javax.swing.JLabel();
        clientsearch = new javax.swing.JTextField();
        resultclientname = new javax.swing.JTextField();
        searchclient = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        booksearch = new javax.swing.JTextField();
        resultbookname = new javax.swing.JTextField();
        resultbookauthor = new javax.swing.JTextField();
        returndate = new com.toedter.calendar.JDateChooser();
        searchbook = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        checkin = new javax.swing.JButton();
        checkout = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        optable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        radiocheckin = new javax.swing.JRadioButton();
        radiocheckout = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        bkcategory = new javax.swing.JComboBox<>();
        fromdate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        todate = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        print = new javax.swing.JButton();
        exportpdf = new javax.swing.JButton();
        exportexcel = new javax.swing.JButton();
        close = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        reporttable = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("SEARCH CLIENT"));

        jLabel9.setText("Client Name:");

        javax.swing.GroupLayout photopLayout = new javax.swing.GroupLayout(photop);
        photop.setLayout(photopLayout);
        photopLayout.setHorizontalGroup(
            photopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, photopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addContainerGap())
        );
        photopLayout.setVerticalGroup(
            photopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(photopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultclientname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultclientnameActionPerformed(evt);
            }
        });

        searchclient.setText("search");
        searchclient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchclientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(resultclientname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(photop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(clientsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchclient)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchclient))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(resultclientname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(photop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("SEARCH BOOK"));

        jLabel12.setText("Book Name:");

        jLabel13.setText("Author:");

        jLabel14.setText("Return Date:");

        searchbook.setText("search");
        searchbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultbookname)
                    .addComponent(resultbookauthor)
                    .addComponent(returndate, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(booksearch, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchbook)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booksearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbook))
                .addGap(16, 16, 16)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(resultbookname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(resultbookauthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(returndate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        checkin.setText("CHECKIN");
        checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinActionPerformed(evt);
            }
        });

        checkout.setText("CHECKOUT");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(checkin)
                .addGap(51, 51, 51)
                .addComponent(checkout)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        optable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client Name", "Book Name", "Author", "Return Date", "Status"
            }
        ));
        jScrollPane3.setViewportView(optable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(321, 321, 321))
        );

        jTabbedPane1.addTab("checkin/checkout", jPanel1);

        buttonGroup1.add(radiocheckin);
        radiocheckin.setText("Check In");

        buttonGroup1.add(radiocheckout);
        radiocheckout.setText("Check Out");
        radiocheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiocheckoutActionPerformed(evt);
            }
        });

        jLabel4.setText("Book Category:");

        jLabel1.setText("From:");

        bkcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkcategoryActionPerformed(evt);
            }
        });

        jLabel2.setText("To");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radiocheckin)
                            .addComponent(jLabel4))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radiocheckout)
                            .addComponent(bkcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiocheckin)
                    .addComponent(radiocheckout))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bkcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        print.setText("PRINT");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        exportpdf.setText("EXPORT PDF");
        exportpdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportpdfActionPerformed(evt);
            }
        });

        exportexcel.setText("EXPORT EXCEL");
        exportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportexcelActionPerformed(evt);
            }
        });

        close.setText("CLOSE");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exportpdf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exportexcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(search)
                .addGap(18, 18, 18)
                .addComponent(print)
                .addGap(18, 18, 18)
                .addComponent(exportpdf)
                .addGap(18, 18, 18)
                .addComponent(exportexcel)
                .addGap(18, 18, 18)
                .addComponent(close)
                .addGap(25, 25, 25))
        );

        reporttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client Name", "Book Name", "Author", "Return Date", "Status"
            }
        ));
        jScrollPane4.setViewportView(reporttable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addComponent(jScrollPane4)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Report", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resultclientnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultclientnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultclientnameActionPerformed

    private void checkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinActionPerformed
        // TODO add your handling code here:
        
        op.setClientname(resultclientname.getText());
        op.setBookname(resultbookname.getText());
        op.setAuthor(resultbookauthor.getText());
        op.setReturndate(new Date(returndate.getDate().getTime()));
        op.setStatus("check_in");
        opd.saveOperation(op);
        insert();
        JOptionPane.showMessageDialog(null, "Data saved"); 
        
        
    }//GEN-LAST:event_checkinActionPerformed

    private void radiocheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiocheckoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiocheckoutActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        
            // TODO add your handling code here:
                    try {
            reporttable.print();
        } catch (PrinterException ex) {
            Logger.getLogger(OperationView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed

    private void searchbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbookActionPerformed
        // TODO add your handling code here:
        int c=0;
          String id =booksearch.getText();
          Transaction tr = null;
          Session se= HibernateUtil.getSessionFactory().openSession();
          tr=se.beginTransaction();
          SQLQuery x= se.createSQLQuery("select bookId from Book");
          List bk = x.list();
          for(Object o:bk){
          String booname=o.toString();
            if(booname.equals(id)){
            c=1;
          JOptionPane.showMessageDialog(null, " Book  found");
          SQLQuery bookna = se.createSQLQuery("select title from Book where bookId=?");
          bookna.setParameter(0, id);
          List a= bookna.list();
          for(Object z:a){
              resultbookname.setText(z.toString());
          }
            SQLQuery que =se.createSQLQuery("select author from Book where bookId=?");
         que.setParameter(0, id);
          List ml =que.list();
         for(Object po:ml){
             resultbookauthor.setText(po.toString());
             
         }
         se.close();
          }
          }
             if(c!=1){
         JOptionPane.showMessageDialog(null, "Book not Found"); 
        }
        
    
          
       
          
          
          
          
          
    }//GEN-LAST:event_searchbookActionPerformed

    private void searchclientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchclientActionPerformed
        // TODO add your handling code here:
        int f=0;
       String clname =resultclientname.getText();
       String cld = clientsearch.getText();
          Transaction tr =null;
       Session session = HibernateUtil.getSessionFactory().openSession();
       tr=session.getTransaction();
         if (clientsearch.getText().isEmpty()){
           SQLQuery query =session.createSQLQuery("select firstname from Client");
            List ls =query.list();
       for (Object cl:ls){
       String cname =cl.toString();
       if (cname.equals(clname)){
       JOptionPane.showMessageDialog(null, "Client found");
       f=1;
        SQLQuery queid = session.createSQLQuery("select regno from Client where firstname=?");
       queid.setParameter(0, clname);
       List list = queid.list();
       for(Object li:list){
       clientsearch.setText(li.toString());
       }
        break;
       }
       }
       if(f!=1){
       JOptionPane.showMessageDialog(null, "Client not found");
       }
       }
         else{
           SQLQuery query = session.createSQLQuery("select regno from Client");
           List ls=query.list();
           for (Object cl:ls){
           String cname =cl.toString();
           if (cname.equals(cld)){
           
           JOptionPane.showMessageDialog(null, "Client Found");
               f=1;
               SQLQuery quen = session.createSQLQuery("select firstname from Client where regno=?");
               quen.setParameter(0, cld);
                       List rn = quen.list();
                for(Object crn : rn)
       {
                       resultclientname.setText(crn.toString());
       }
                break;
           }
           }
             if(f!=1)
       {
         JOptionPane.showMessageDialog(null, "client not Found");  
       }
               session.close();
             String path;
             Transaction n =null;
             Session sess = HibernateUtil.getSessionFactory().openSession();
             n=sess.beginTransaction();
             SQLQuery q=sess.createSQLQuery("select photo from Client where regno=?");
             q.setParameter(0, cld);
             List r =q.list();
             for(Object o:r){
                 path=o.toString();
              ImageIcon img = new ImageIcon(path);
               Image image = img.getImage().getScaledInstance(resultphoto.getWidth(),resultphoto.getHeight(),Image.SCALE_DEFAULT);
                resultphoto.setIcon(new ImageIcon(image));
              
              
             }
             
      
       }
    
    
         
    }//GEN-LAST:event_searchclientActionPerformed

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
        // TODO add your handling code here:
        op.setClientname(resultclientname.getText());
        op.setBookname(resultbookname.getText());
        op.setAuthor(resultbookauthor.getText());
        op.setReturndate(new Date(returndate.getDate().getTime()));
        op.setStatus("check_out");
        opd.saveOperation(op);
        insert();
        JOptionPane.showMessageDialog(null, "Data saved"); 
    }//GEN-LAST:event_checkoutActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        Transaction tr = null;
        Session ses = HibernateUtil.getSessionFactory().openSession();
        tr = ses.beginTransaction();
        String st;
       if (radiocheckin.isSelected()) {
            st = "Check_in";
            Criteria cr = ses.createCriteria(Operation.class, "status = Check_in");
            cr.add(Restrictions.eq("status", st));
            List ls = cr.list();
            DefaultTableModel model = (DefaultTableModel) reporttable.getModel();
            model.setRowCount(0);
            Object[] o = new Object[5];
            for (Iterator i = ls.iterator(); i.hasNext();) {
                Operation ch = (Operation) i.next();
                o[0] = ch.getClientname();
                o[1] = ch.getBookname();
                o[2] = ch.getAuthor();
                o[3] = ch.getReturndate();
                o[4] = ch.getStatus();
                model.addRow(o);
            }
            ses.close();
        } else if (radiocheckout.isSelected()) {
            st = "Check_out";
            ses = HibernateUtil.getSessionFactory().openSession();
            tr = ses.beginTransaction();
            Criteria crnext = ses.createCriteria(Operation.class, "status = Check_out");
            crnext.add(Restrictions.eq("status", st));
            List ls = crnext.list();
            DefaultTableModel model = (DefaultTableModel) reporttable.getModel();
            model.setRowCount(0);
            Object[] o = new Object[5];
            for (Iterator i = ls.iterator(); i.hasNext();) {
                Operation ch = (Operation) i.next();
                o[0] = ch.getClientname();
                o[1] = ch.getBookname();
                o[2] = ch.getAuthor();
                o[3] = ch.getReturndate();
                o[4] = ch.getStatus();
                model.addRow(o);
            }
            ses.close();
        } 
    
          else if (fromdate.getDate() == null) {
               st = "Check_in";
            Criteria cr = ses.createCriteria(Operation.class, "status = Check_in");
            cr.add(Restrictions.eq("status", st));
            List ls = cr.list();
            DefaultTableModel model = (DefaultTableModel) reporttable.getModel();
            model.setRowCount(0);
            Object[] o = new Object[5];
            for (Iterator i = ls.iterator(); i.hasNext();) {
                Operation ch = (Operation) i.next();
                o[0] = ch.getClientname();
                o[1] = ch.getBookname();
                o[2] = ch.getAuthor();
                o[3] = ch.getReturndate();
                o[4] = ch.getStatus();
                model.addRow(o);
                  }
            ses.close();
          }
    
        else {
            Date from = fromdate.getDate();
            Date to = todate.getDate();
            ses = HibernateUtil.getSessionFactory().openSession();
            tr = ses.beginTransaction();
            Criteria crnext = ses.createCriteria(Operation.class);
            crnext.add(Restrictions.ge("returndate", from));
            crnext.add(Restrictions.le("returndate", to));
            List ls = crnext.list();
            DefaultTableModel model = (DefaultTableModel) reporttable.getModel();
            model.setRowCount(0);
            Object[] o = new Object[5];
            for (Iterator i = ls.iterator(); i.hasNext();) {
                Operation ch = (Operation) i.next();
                o[0] = ch.getClientname();
                o[1] = ch.getBookname();
                o[2] = ch.getAuthor();
                o[3] = ch.getReturndate();
                o[4] = ch.getStatus();
                model.addRow(o);
            }
            ses.close();

        }
    }//GEN-LAST:event_searchActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        System.exit(0);
      
     
    }//GEN-LAST:event_closeActionPerformed

    private void exportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportexcelActionPerformed
        // TODO add your handling code here:
          FileOutputStream excelFout =null;
            BufferedOutputStream excelBout = null;
            XSSFWorkbook excelJTableExporter=null;
        JFileChooser excelFileChooser= new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef= new FileNameExtensionFilter("EXCEL FILES","xls","xlsx","xlsm");
        excelFileChooser.setFileFilter(fnef);
        excelFileChooser.showSaveDialog(null);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        if(excelChooser == JFileChooser.APPROVE_OPTION){
            
            try { 
                 excelJTableExporter =new XSSFWorkbook();
                XSSFSheet excelSheet =excelJTableExporter.createSheet("JTable Sheet");
                for(int i =0; i<reporttable.getRowCount();i++){
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for( int j =0; j<reporttable.getColumnCount();j++){
                        XSSFCell excelCell = excelRow.createCell(j);
                        excelCell.setCellValue(reporttable.getValueAt(i, j).toString());
                    }
                }   
                excelFout = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBout = new BufferedOutputStream(excelFout);
                excelJTableExporter.write(excelBout);
                JOptionPane.showMessageDialog(null, "Done!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(OperationView.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (excelBout!=null) {
                        excelBout.close();
                    }
                     
                    if (excelFout!=null) {
                        excelFout.close();
                    }
                    
                    if (excelJTableExporter!=null) {
                        excelJTableExporter.close();
                    } 
                    
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            
        }
    }//GEN-LAST:event_exportexcelActionPerformed

    private void exportpdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportpdfActionPerformed
        // TODO add your handling code here:
         String path = "";
        JFileChooser j = new JFileChooser();
        //j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();

        }
        Document doc = new Document();
        
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + "Report.pdf"));
            doc.open();
            PdfPTable table = new PdfPTable(5);
            table.addCell("Client name");
            table.addCell("Book name");
            table.addCell("Author");
            table.addCell("Return Date");
            table.addCell("Status");
            for (int i = 0; i < reporttable.getRowCount(); i++) {
                String cname = reporttable.getValueAt(i, 0).toString();
                String bname = reporttable.getValueAt(i, 1).toString();
                String author = reporttable.getValueAt(i, 2).toString();
                String returndate = reporttable.getValueAt(i, 3).toString();
                String status = reporttable.getValueAt(i, 4).toString();
                table.addCell(cname);
                table.addCell(bname);
                table.addCell(author);
                table.addCell(returndate);
                table.addCell(status);
              
            }
             doc.add(table);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(OperationView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(OperationView.class.getName()).log(Level.SEVERE, null, ex);
        }
         doc.close();

    }//GEN-LAST:event_exportpdfActionPerformed

    private void bkcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkcategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bkcategoryActionPerformed
private void insert(){
Transaction tr = null;
        Session ses = HibernateUtil.getSessionFactory().openSession();
        tr = ses.beginTransaction();
     
             String cn= null;
             String cid= null;
             String bkn= null;
              
             cn=bkcategory.getSelectedItem().toString();
             

           
           cid=ses.createQuery("select categoryId from Category where CategoryName=cn").toString();
             
             bkn=ses.createQuery("select title  from Book where category_1 =cat1").toString();

 
      
            
            Criteria cr = ses.createCriteria(Operation.class, "bookname = bkn");
            cr.add(Restrictions.eq("bookname", bkn));
            List ls = cr.list();
            DefaultTableModel model = (DefaultTableModel) reporttable.getModel();
            model.setRowCount(0);
            Object[] o = new Object[5];
            for (Iterator i = ls.iterator(); i.hasNext();) {
                Operation ch = (Operation) i.next();
                o[0] = ch.getClientname();
                o[1] = ch.getBookname();
                o[2] = ch.getAuthor();
                o[3] = ch.getReturndate();
                o[4] = ch.getStatus();
                model.addRow(o);
            }
            ses.close();
} 




        

              


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bkcategory;
    private javax.swing.JTextField booksearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton checkin;
    private javax.swing.JButton checkout;
    private javax.swing.JTextField clientsearch;
    private javax.swing.JButton close;
    private javax.swing.JButton exportexcel;
    private javax.swing.JButton exportpdf;
    private com.toedter.calendar.JDateChooser fromdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable optable;
    private javax.swing.JPanel photop;
    private javax.swing.JButton print;
    private javax.swing.JRadioButton radiocheckin;
    private javax.swing.JRadioButton radiocheckout;
    private javax.swing.JTable reporttable;
    private javax.swing.JTextField resultbookauthor;
    private javax.swing.JTextField resultbookname;
    private javax.swing.JTextField resultclientname;
    private javax.swing.JLabel resultphoto;
    private com.toedter.calendar.JDateChooser returndate;
    private javax.swing.JButton search;
    private javax.swing.JButton searchbook;
    private javax.swing.JButton searchclient;
    private com.toedter.calendar.JDateChooser todate;
    // End of variables declaration//GEN-END:variables
}
